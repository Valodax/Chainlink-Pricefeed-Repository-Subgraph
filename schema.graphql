type AccessControllerSet @entity(immutable: true) {
  id: Bytes!
  accessController: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FeedConfirmed @entity(immutable: true) {
  id: Bytes!
  asset: Bytes! # address
  denomination: Bytes! # address
  latestAggregator: Bytes! # address
  previousAggregator: Bytes! # address
  nextPhaseId: Int! # uint16
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FeedProposed @entity(immutable: true) {
  id: Bytes!
  asset: Bytes! # address
  denomination: Bytes! # address
  proposedAggregator: Bytes! # address
  currentAggregator: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferRequested @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PriceDataFeedStatus @entity {
  id: Bytes! # address
  asset: Bytes! # address
  denomination: Bytes! # address
  aggregator: Bytes! # address
  timeCreated: BigInt!
  live: Boolean! # boolean
}

type PriceDataFeed @entity {
  id: Bytes! # address
}

# Event emitted by the AggregatorProxy contract
type AnswerUpdated @entity(immutable: true) {
  id: Bytes! # address
  current: BigInt! # int256
  roundId: BigInt! # uint256
  updatedAt: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

# Event emitted by the AggregatorProxy contract
type NewRound @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint256
  startedBy: Bytes! # address
  startedAt: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
